{"ast":null,"code":"var _jsxFileName = \"/Users/keyinstudent/Documents/Zine/zine-website/src/components/Zines.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Zines = ({\n  zines\n}) => {\n  _s();\n  const [flippedCards, setFlippedCards] = useState([]);\n  const flipCard = index => {\n    const updatedFlippedCards = [...flippedCards];\n    updatedFlippedCards[index] = !updatedFlippedCards[index];\n    setFlippedCards(updatedFlippedCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: zines.map((zine, index) => /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      flipDirection: \"horizontal\",\n      isFlipped: flippedCards[index] || false,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => flipCard(index),\n        children: \"Click to flip\"\n      }, \"front\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Array.isArray(zine.images) && zine.images.map((image, imageIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.data,\n          alt: `Zine ${index + 1} Image ${imageIndex + 1}`,\n          onClick: () => flipCard(index)\n        }, imageIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this))\n      }, \"back\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Zines, \"YLY3Lrn6J8iuDNQX0Yv+l499tVs=\");\n_c = Zines;\nexport default Zines;\nvar _c;\n$RefreshReg$(_c, \"Zines\");","map":{"version":3,"names":["React","useState","ReactCardFlip","jsxDEV","_jsxDEV","Zines","zines","_s","flippedCards","setFlippedCards","flipCard","index","updatedFlippedCards","children","map","zine","flipDirection","isFlipped","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","images","image","imageIndex","src","data","alt","_c","$RefreshReg$"],"sources":["/Users/keyinstudent/Documents/Zine/zine-website/src/components/Zines.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Zines = ({ zines }) => {\n  const [flippedCards, setFlippedCards] = useState([]);\n\n  const flipCard = (index) => {\n    const updatedFlippedCards = [...flippedCards];\n    updatedFlippedCards[index] = !updatedFlippedCards[index];\n    setFlippedCards(updatedFlippedCards);\n  };\n\n  return (\n    <div>\n      {zines.map((zine, index) => (\n        <ReactCardFlip\n          key={index}\n          flipDirection=\"horizontal\"\n          isFlipped={flippedCards[index] || false}\n        >\n          <div key=\"front\" onClick={() => flipCard(index)}>\n            {/* Content for the front of the card */}\n            Click to flip\n          </div>\n          <div key=\"back\">\n            {/* Content for the back of the card */}\n            {Array.isArray(zine.images) &&\n              zine.images.map((image, imageIndex) => (\n                <img\n                  key={imageIndex}\n                  src={image.data}\n                  alt={`Zine ${index + 1} Image ${imageIndex + 1}`}\n                  onClick={() => flipCard(index)}\n                />\n              ))}\n          </div>\n        </ReactCardFlip>\n      ))}\n    </div>\n  );\n};\n\nexport default Zines;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,QAAQ,GAAIC,KAAK,IAAK;IAC1B,MAAMC,mBAAmB,GAAG,CAAC,GAAGJ,YAAY,CAAC;IAC7CI,mBAAmB,CAACD,KAAK,CAAC,GAAG,CAACC,mBAAmB,CAACD,KAAK,CAAC;IACxDF,eAAe,CAACG,mBAAmB,CAAC;EACtC,CAAC;EAED,oBACER,OAAA;IAAAS,QAAA,EACGP,KAAK,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEJ,KAAK,kBACrBP,OAAA,CAACF,aAAa;MAEZc,aAAa,EAAC,YAAY;MAC1BC,SAAS,EAAET,YAAY,CAACG,KAAK,CAAC,IAAI,KAAM;MAAAE,QAAA,gBAExCT,OAAA;QAAiBc,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACC,KAAK,CAAE;QAAAE,QAAA,EACL;MAE3C,GAHS,OAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CAAC,eACNlB,OAAA;QAAAS,QAAA,EAEGU,KAAK,CAACC,OAAO,CAACT,IAAI,CAACU,MAAM,CAAC,IACzBV,IAAI,CAACU,MAAM,CAACX,GAAG,CAAC,CAACY,KAAK,EAAEC,UAAU,kBAChCvB,OAAA;UAEEwB,GAAG,EAAEF,KAAK,CAACG,IAAK;UAChBC,GAAG,EAAG,QAAOnB,KAAK,GAAG,CAAE,UAASgB,UAAU,GAAG,CAAE,EAAE;UACjDT,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACC,KAAK;QAAE,GAH1BgB,UAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIhB,CACF;MAAC,GAVG,MAAM;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWV,CAAC;IAAA,GAnBDX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoBG,CAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CArCIF,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}