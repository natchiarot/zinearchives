{"ast":null,"code":"var _jsxFileName = \"/Users/keyinstudent/Documents/Zine/zine-website/src/components/AddZines.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddZines = ({\n  onAdd\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    return () => {\n      images.forEach(image => URL.revokeObjectURL(image.preview));\n    };\n  }, [images]);\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"author\", author);\n      formData.append(\"description\", description);\n      images.forEach(image => formData.append(\"images\", image));\n      const response = await fetch(\"/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      onAdd(data);\n      setTitle(\"\");\n      setAuthor(\"\");\n      setDescription(\"\");\n      setImages([]);\n    } catch (error) {\n      console.error(\"Error uploading zine:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-zine\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Title of this zine\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"author\",\n      children: \"Author:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \"Author of this zine\",\n      value: author,\n      onChange: e => setAuthor(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"description\",\n      name: \"description\",\n      placeholder: \"Add a description for your zine here\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"images\",\n      children: \"Images:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"images\",\n      name: \"images\",\n      accept: \"image/*\",\n      onChange: e => setImages(e.target.files),\n      multiple: true,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Upload Zine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AddZines, \"f+UmSna9CHgmaW+/FCvKApWVK4A=\");\n_c = AddZines;\nexport default AddZines;\nvar _c;\n$RefreshReg$(_c, \"AddZines\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AddZines","onAdd","_s","title","setTitle","author","setAuthor","description","setDescription","images","setImages","useEffect","forEach","image","URL","revokeObjectURL","preview","onSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","error","console","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","placeholder","value","onChange","target","required","accept","files","multiple","_c","$RefreshReg$"],"sources":["/Users/keyinstudent/Documents/Zine/zine-website/src/components/AddZines.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst AddZines = ({ onAdd }) => {\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    return () => {\n      images.forEach((image) => URL.revokeObjectURL(image.preview));\n    };\n  }, [images]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"author\", author);\n      formData.append(\"description\", description);\n\n      images.forEach((image) => formData.append(\"images\", image));\n\n      const response = await fetch(\"/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const data = await response.json();\n\n      onAdd(data);\n\n      setTitle(\"\");\n      setAuthor(\"\");\n      setDescription(\"\");\n      setImages([]);\n    } catch (error) {\n      console.error(\"Error uploading zine:\", error);\n    }\n  };\n  return (\n    <form className=\"add-zine\" onSubmit={onSubmit}>\n      <label htmlFor=\"title\">Title:</label>\n      <br />\n      <input\n        type=\"text\"\n        id=\"title\"\n        name=\"title\"\n        placeholder=\"Title of this zine\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        required\n      ></input>\n      <br />\n      <label htmlFor=\"author\">Author:</label>\n      <br />\n      <input\n        type=\"text\"\n        id=\"author\"\n        name=\"author\"\n        placeholder=\"Author of this zine\"\n        value={author}\n        onChange={(e) => setAuthor(e.target.value)}\n        required\n      ></input>\n      <br />\n      <label htmlFor=\"description\">Description:</label>\n      <br />\n      <textarea\n        id=\"description\"\n        name=\"description\"\n        placeholder=\"Add a description for your zine here\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      ></textarea>\n      <br />\n      <label htmlFor=\"images\">Images:</label>\n      <br />\n      <input\n        type=\"file\"\n        id=\"images\"\n        name=\"images\"\n        accept=\"image/*\"\n        onChange={(e) => setImages(e.target.files)}\n        multiple\n        required\n      ></input>\n      <br />\n      <input type=\"submit\" value=\"Upload Zine\"></input>\n    </form>\n  );\n};\n\nexport default AddZines;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}