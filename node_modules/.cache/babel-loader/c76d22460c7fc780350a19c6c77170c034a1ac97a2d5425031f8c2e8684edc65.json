{"ast":null,"code":"var _jsxFileName = \"/Users/keyinstudent/Documents/Zine/zine-website/src/components/Zines.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Zines = ({\n  zines\n}) => {\n  _s();\n  const [isFlipped, setIsFlipped] = useState(false);\n  function flipCard(index) {\n    const updatedFlippedCards = [...flippedCards];\n    updatedFlippedCards[index] = !updatedFlippedCards[index];\n    setFlippedCards(updatedFlippedCards);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: zines.map((zine, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n        flipDirection: \"horizontal\",\n        isFlipped: isFlipped,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: flipCard,\n          children: \"Click to flip\"\n        }, \"front\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Array.isArray(zine.images) && zine.images.map((image, imageIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.data,\n            alt: `Zine ${index + 1} Image ${imageIndex + 1}`\n          }, imageIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this))\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Zines, \"9NPh+N5IPOCpZ+AUtVyw7TZ32I8=\");\n_c = Zines;\nexport default Zines;\nvar _c;\n$RefreshReg$(_c, \"Zines\");","map":{"version":3,"names":["useState","ReactCardFlip","jsxDEV","_jsxDEV","Zines","zines","_s","isFlipped","setIsFlipped","flipCard","index","updatedFlippedCards","flippedCards","setFlippedCards","children","map","zine","flipDirection","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","images","image","imageIndex","src","data","alt","_c","$RefreshReg$"],"sources":["/Users/keyinstudent/Documents/Zine/zine-website/src/components/Zines.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Zines = ({ zines }) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  function flipCard(index) {\n    const updatedFlippedCards = [...flippedCards];\n    updatedFlippedCards[index] = !updatedFlippedCards[index];\n    setFlippedCards(updatedFlippedCards);\n  }\n\n  return (\n    <div>\n      {zines.map((zine, index) => (\n        <div key={index}>\n          <ReactCardFlip flipDirection=\"horizontal\" isFlipped={isFlipped}>\n            <div key=\"front\" onClick={flipCard}>\n              {/* Content for the front of the card */}\n              Click to flip\n            </div>\n            <div key=\"back\">\n              {/* Content for the back of the card */}\n              {Array.isArray(zine.images) &&\n                zine.images.map((image, imageIndex) => (\n                  <img\n                    key={imageIndex}\n                    src={image.data}\n                    alt={`Zine ${index + 1} Image ${imageIndex + 1}`}\n                  />\n                ))}\n            </div>\n          </ReactCardFlip>\n          {/* {console.log(\"zine.images\", zine.images)} */}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Zines;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,SAASS,QAAQA,CAACC,KAAK,EAAE;IACvB,MAAMC,mBAAmB,GAAG,CAAC,GAAGC,YAAY,CAAC;IAC7CD,mBAAmB,CAACD,KAAK,CAAC,GAAG,CAACC,mBAAmB,CAACD,KAAK,CAAC;IACxDG,eAAe,CAACF,mBAAmB,CAAC;EACtC;EAEA,oBACER,OAAA;IAAAW,QAAA,EACGT,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEN,KAAK,kBACrBP,OAAA;MAAAW,QAAA,eACEX,OAAA,CAACF,aAAa;QAACgB,aAAa,EAAC,YAAY;QAACV,SAAS,EAAEA,SAAU;QAAAO,QAAA,gBAC7DX,OAAA;UAAiBe,OAAO,EAAET,QAAS;UAAAK,QAAA,EACQ;QAE3C,GAHS,OAAO;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGX,CAAC,eACNnB,OAAA;UAAAW,QAAA,EAEGS,KAAK,CAACC,OAAO,CAACR,IAAI,CAACS,MAAM,CAAC,IACzBT,IAAI,CAACS,MAAM,CAACV,GAAG,CAAC,CAACW,KAAK,EAAEC,UAAU,kBAChCxB,OAAA;YAEEyB,GAAG,EAAEF,KAAK,CAACG,IAAK;YAChBC,GAAG,EAAG,QAAOpB,KAAK,GAAG,CAAE,UAASiB,UAAU,GAAG,CAAE;UAAE,GAF5CA,UAAU;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGhB,CACF;QAAC,GATG,MAAM;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC,GAjBRZ,KAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmBV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAnCIF,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}